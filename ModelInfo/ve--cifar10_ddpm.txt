Model Size: 35218947
DataParallel(
  (module): DDPM(
    (act): SiLU()
    (all_modules): ModuleList(
      (0): Linear(in_features=128, out_features=512, bias=True)
      (1): Linear(in_features=512, out_features=512, bias=True)
      (2): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3-4): 2 x ResnetBlockDDPM(
        (GroupNorm_0): GroupNorm(32, 128, eps=1e-06, affine=True)
        (act): SiLU()
        (Conv_0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (Dense_0): Linear(in_features=512, out_features=128, bias=True)
        (GroupNorm_1): GroupNorm(32, 128, eps=1e-06, affine=True)
        (Dropout_0): Dropout(p=0.1, inplace=False)
        (Conv_1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (5): Downsample(
        (Conv_0): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2))
      )
      (6): ResnetBlockDDPM(
        (GroupNorm_0): GroupNorm(32, 128, eps=1e-06, affine=True)
        (act): SiLU()
        (Conv_0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (Dense_0): Linear(in_features=512, out_features=256, bias=True)
        (GroupNorm_1): GroupNorm(32, 256, eps=1e-06, affine=True)
        (Dropout_0): Dropout(p=0.1, inplace=False)
        (Conv_1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (NIN_0): NIN()
      )
      (7): AttnBlock(
        (GroupNorm_0): GroupNorm(32, 256, eps=1e-06, affine=True)
        (NIN_0): NIN()
        (NIN_1): NIN()
        (NIN_2): NIN()
        (NIN_3): NIN()
      )
      (8): ResnetBlockDDPM(
        (GroupNorm_0): GroupNorm(32, 256, eps=1e-06, affine=True)
        (act): SiLU()
        (Conv_0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (Dense_0): Linear(in_features=512, out_features=256, bias=True)
        (GroupNorm_1): GroupNorm(32, 256, eps=1e-06, affine=True)
        (Dropout_0): Dropout(p=0.1, inplace=False)
        (Conv_1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (9): AttnBlock(
        (GroupNorm_0): GroupNorm(32, 256, eps=1e-06, affine=True)
        (NIN_0): NIN()
        (NIN_1): NIN()
        (NIN_2): NIN()
        (NIN_3): NIN()
      )
      (10): Downsample(
        (Conv_0): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2))
      )
      (11-12): 2 x ResnetBlockDDPM(
        (GroupNorm_0): GroupNorm(32, 256, eps=1e-06, affine=True)
        (act): SiLU()
        (Conv_0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (Dense_0): Linear(in_features=512, out_features=256, bias=True)
        (GroupNorm_1): GroupNorm(32, 256, eps=1e-06, affine=True)
        (Dropout_0): Dropout(p=0.1, inplace=False)
        (Conv_1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (13): Downsample(
        (Conv_0): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2))
      )
      (14-16): 3 x ResnetBlockDDPM(
        (GroupNorm_0): GroupNorm(32, 256, eps=1e-06, affine=True)
        (act): SiLU()
        (Conv_0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (Dense_0): Linear(in_features=512, out_features=256, bias=True)
        (GroupNorm_1): GroupNorm(32, 256, eps=1e-06, affine=True)
        (Dropout_0): Dropout(p=0.1, inplace=False)
        (Conv_1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (17): AttnBlock(
        (GroupNorm_0): GroupNorm(32, 256, eps=1e-06, affine=True)
        (NIN_0): NIN()
        (NIN_1): NIN()
        (NIN_2): NIN()
        (NIN_3): NIN()
      )
      (18): ResnetBlockDDPM(
        (GroupNorm_0): GroupNorm(32, 256, eps=1e-06, affine=True)
        (act): SiLU()
        (Conv_0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (Dense_0): Linear(in_features=512, out_features=256, bias=True)
        (GroupNorm_1): GroupNorm(32, 256, eps=1e-06, affine=True)
        (Dropout_0): Dropout(p=0.1, inplace=False)
        (Conv_1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (19-21): 3 x ResnetBlockDDPM(
        (GroupNorm_0): GroupNorm(32, 512, eps=1e-06, affine=True)
        (act): SiLU()
        (Conv_0): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (Dense_0): Linear(in_features=512, out_features=256, bias=True)
        (GroupNorm_1): GroupNorm(32, 256, eps=1e-06, affine=True)
        (Dropout_0): Dropout(p=0.1, inplace=False)
        (Conv_1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (NIN_0): NIN()
      )
      (22): Upsample(
        (Conv_0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (23-25): 3 x ResnetBlockDDPM(
        (GroupNorm_0): GroupNorm(32, 512, eps=1e-06, affine=True)
        (act): SiLU()
        (Conv_0): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (Dense_0): Linear(in_features=512, out_features=256, bias=True)
        (GroupNorm_1): GroupNorm(32, 256, eps=1e-06, affine=True)
        (Dropout_0): Dropout(p=0.1, inplace=False)
        (Conv_1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (NIN_0): NIN()
      )
      (26): Upsample(
        (Conv_0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (27-28): 2 x ResnetBlockDDPM(
        (GroupNorm_0): GroupNorm(32, 512, eps=1e-06, affine=True)
        (act): SiLU()
        (Conv_0): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (Dense_0): Linear(in_features=512, out_features=256, bias=True)
        (GroupNorm_1): GroupNorm(32, 256, eps=1e-06, affine=True)
        (Dropout_0): Dropout(p=0.1, inplace=False)
        (Conv_1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (NIN_0): NIN()
      )
      (29): ResnetBlockDDPM(
        (GroupNorm_0): GroupNorm(32, 384, eps=1e-06, affine=True)
        (act): SiLU()
        (Conv_0): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (Dense_0): Linear(in_features=512, out_features=256, bias=True)
        (GroupNorm_1): GroupNorm(32, 256, eps=1e-06, affine=True)
        (Dropout_0): Dropout(p=0.1, inplace=False)
        (Conv_1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (NIN_0): NIN()
      )
      (30): AttnBlock(
        (GroupNorm_0): GroupNorm(32, 256, eps=1e-06, affine=True)
        (NIN_0): NIN()
        (NIN_1): NIN()
        (NIN_2): NIN()
        (NIN_3): NIN()
      )
      (31): Upsample(
        (Conv_0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (32): ResnetBlockDDPM(
        (GroupNorm_0): GroupNorm(32, 384, eps=1e-06, affine=True)
        (act): SiLU()
        (Conv_0): Conv2d(384, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (Dense_0): Linear(in_features=512, out_features=128, bias=True)
        (GroupNorm_1): GroupNorm(32, 128, eps=1e-06, affine=True)
        (Dropout_0): Dropout(p=0.1, inplace=False)
        (Conv_1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (NIN_0): NIN()
      )
      (33-34): 2 x ResnetBlockDDPM(
        (GroupNorm_0): GroupNorm(32, 256, eps=1e-06, affine=True)
        (act): SiLU()
        (Conv_0): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (Dense_0): Linear(in_features=512, out_features=128, bias=True)
        (GroupNorm_1): GroupNorm(32, 128, eps=1e-06, affine=True)
        (Dropout_0): Dropout(p=0.1, inplace=False)
        (Conv_1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (NIN_0): NIN()
      )
      (35): GroupNorm(32, 128, eps=1e-06, affine=True)
      (36): Conv2d(128, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
)